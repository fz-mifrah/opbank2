application {
  config {
    baseName library,
    applicationType monolith,
    authenticationType jwt
    packageName com.sgaraba.library,
    prodDatabaseType postgresql,
    cacheProvider hazelcast,
    buildTool maven,
    clientFramework angular,
    testFrameworks [cypress],
	nativeLanguage en,
    languages [en, ro, ru]
  }
  entities *
}

entity Client {
    cin String required,
    nom String required,
    prenom String required,
    adress String required,
    postalCode Long required,
    dateNaissence LocalDate required,
    email String required
}

entity Compte {
	rib Long required,
    dateOuverture LocalDate ,
    code Integer required
}

entity Banque {
	nom String required,
	adresse String,
	email String required
}

entity CarteBancaire {
	numCompte String required,
    
}
enum TypeOperation{
	TypeVirement, TypeTransfer, TypeRecharge, TypePaimentFacture
}

entity Operation {
	numOperation String required,
    date LocalDate,
    typeOperatin TypeOperation ,
    etatOperation String,
    montant Double required
}

entity Virement {
	description String
}

entity Beneficiaire {
	nomPrenom String required,
	numCompte Long required
}

entity Destinataire {
	nom String required,
	prenom String required,
	rib Long required
}

entity Transfer {
	cinDestinataireII String required,
    nomPrenomDestinataireII String required,
    telDestinataireII Long
}

entity Recharge {
    numTel Long required,
}

entity Operateur {
	nom String required
}

entity PaimentFacture {
    referance Long required
}

entity Facture {
	nom String required
}

relationship OneToOne {
	Client{Compte(nom)} to Compte{Client(nom) },
    Compte{CarteBancaire} to CarteBancaire{compte},
    Operation{Virement} to Virement{Operation},
    Operation{Transfer} to Transfer{Operation},
    Operation{Recharge} to Recharge{Operation},
    Operation{PaimentFacture} to PaimentFacture{Operation},
}

relationship OneToMany {
    Banque to Compte{banque},
    Compte to Operation{compte},
    Virement{destinataire(rib)} to Destinataire{virement},
    Virement{beneficiaire(nomPrenom)} to Beneficiaire{virement}
}

relationship ManyToMany {
	Recharge{Operateur(nom) } to Operateur{Recharge},
    PaimentFacture{Facture(nom) } to Facture{PaimentFacture},
    
}

paginate Client, Compte with pagination
paginate Operation, CarteBancaire with pagination
paginate Virement, Transfer, Recharge, PaimentFacture with infinite-scroll

dto * with mapstruct
    
service all with serviceImpl


